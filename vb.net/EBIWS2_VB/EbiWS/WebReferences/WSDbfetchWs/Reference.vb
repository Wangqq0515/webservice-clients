'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3643
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'
Namespace EbiWS.WSDbfetchWs
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSDbfetchDoclitSoapBinding", [Namespace]:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit")>  _
    Partial Public Class WSDBFetchDoclitServerService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getSupportedDBsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSupportedFormatsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSupportedStylesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDatabaseInfoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDatabaseInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDbFormatsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFormatInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFormatStylesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getStyleInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fetchDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fetchBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit"
        End Sub
        
        '''<remarks/>
        Public Event getSupportedDBsCompleted As getSupportedDBsCompletedEventHandler
        
        '''<remarks/>
        Public Event getSupportedFormatsCompleted As getSupportedFormatsCompletedEventHandler
        
        '''<remarks/>
        Public Event getSupportedStylesCompleted As getSupportedStylesCompletedEventHandler
        
        '''<remarks/>
        Public Event getDatabaseInfoListCompleted As getDatabaseInfoListCompletedEventHandler
        
        '''<remarks/>
        Public Event getDatabaseInfoCompleted As getDatabaseInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event getDbFormatsCompleted As getDbFormatsCompletedEventHandler
        
        '''<remarks/>
        Public Event getFormatInfoCompleted As getFormatInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event getFormatStylesCompleted As getFormatStylesCompletedEventHandler
        
        '''<remarks/>
        Public Event getStyleInfoCompleted As getStyleInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event fetchDataCompleted As fetchDataCompletedEventHandler
        
        '''<remarks/>
        Public Event fetchBatchCompleted As fetchBatchCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSupportedDBs() As <System.Xml.Serialization.XmlElementAttribute("getSupportedDBsReturn")> String()
            Dim results() As Object = Me.Invoke("getSupportedDBs", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetSupportedDBs(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getSupportedDBs", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetSupportedDBs(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSupportedDBsAsync()
            Me.getSupportedDBsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSupportedDBsAsync(ByVal userState As Object)
            If (Me.getSupportedDBsOperationCompleted Is Nothing) Then
                Me.getSupportedDBsOperationCompleted = AddressOf Me.OngetSupportedDBsOperationCompleted
            End If
            Me.InvokeAsync("getSupportedDBs", New Object(-1) {}, Me.getSupportedDBsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSupportedDBsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSupportedDBsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSupportedDBsCompleted(Me, New getSupportedDBsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSupportedFormats() As <System.Xml.Serialization.XmlElementAttribute("getSupportedFormatsReturn")> String()
            Dim results() As Object = Me.Invoke("getSupportedFormats", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetSupportedFormats(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getSupportedFormats", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetSupportedFormats(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSupportedFormatsAsync()
            Me.getSupportedFormatsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSupportedFormatsAsync(ByVal userState As Object)
            If (Me.getSupportedFormatsOperationCompleted Is Nothing) Then
                Me.getSupportedFormatsOperationCompleted = AddressOf Me.OngetSupportedFormatsOperationCompleted
            End If
            Me.InvokeAsync("getSupportedFormats", New Object(-1) {}, Me.getSupportedFormatsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSupportedFormatsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSupportedFormatsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSupportedFormatsCompleted(Me, New getSupportedFormatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSupportedStyles() As <System.Xml.Serialization.XmlElementAttribute("getSupportedStylesReturn")> String()
            Dim results() As Object = Me.Invoke("getSupportedStyles", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetSupportedStyles(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getSupportedStyles", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetSupportedStyles(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSupportedStylesAsync()
            Me.getSupportedStylesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSupportedStylesAsync(ByVal userState As Object)
            If (Me.getSupportedStylesOperationCompleted Is Nothing) Then
                Me.getSupportedStylesOperationCompleted = AddressOf Me.OngetSupportedStylesOperationCompleted
            End If
            Me.InvokeAsync("getSupportedStyles", New Object(-1) {}, Me.getSupportedStylesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSupportedStylesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSupportedStylesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSupportedStylesCompleted(Me, New getSupportedStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDatabaseInfoList() As <System.Xml.Serialization.XmlElementAttribute("getDatabaseInfoListReturn")> DatabaseInfo()
            Dim results() As Object = Me.Invoke("getDatabaseInfoList", New Object(-1) {})
            Return CType(results(0),DatabaseInfo())
        End Function
        
        '''<remarks/>
        Public Function BegingetDatabaseInfoList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDatabaseInfoList", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetDatabaseInfoList(ByVal asyncResult As System.IAsyncResult) As DatabaseInfo()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),DatabaseInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDatabaseInfoListAsync()
            Me.getDatabaseInfoListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDatabaseInfoListAsync(ByVal userState As Object)
            If (Me.getDatabaseInfoListOperationCompleted Is Nothing) Then
                Me.getDatabaseInfoListOperationCompleted = AddressOf Me.OngetDatabaseInfoListOperationCompleted
            End If
            Me.InvokeAsync("getDatabaseInfoList", New Object(-1) {}, Me.getDatabaseInfoListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDatabaseInfoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDatabaseInfoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDatabaseInfoListCompleted(Me, New getDatabaseInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDatabaseInfo(ByVal db As String) As <System.Xml.Serialization.XmlElementAttribute("getDatabaseInfoReturn")> DatabaseInfo
            Dim results() As Object = Me.Invoke("getDatabaseInfo", New Object() {db})
            Return CType(results(0),DatabaseInfo)
        End Function
        
        '''<remarks/>
        Public Function BegingetDatabaseInfo(ByVal db As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDatabaseInfo", New Object() {db}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetDatabaseInfo(ByVal asyncResult As System.IAsyncResult) As DatabaseInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),DatabaseInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDatabaseInfoAsync(ByVal db As String)
            Me.getDatabaseInfoAsync(db, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDatabaseInfoAsync(ByVal db As String, ByVal userState As Object)
            If (Me.getDatabaseInfoOperationCompleted Is Nothing) Then
                Me.getDatabaseInfoOperationCompleted = AddressOf Me.OngetDatabaseInfoOperationCompleted
            End If
            Me.InvokeAsync("getDatabaseInfo", New Object() {db}, Me.getDatabaseInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDatabaseInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDatabaseInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDatabaseInfoCompleted(Me, New getDatabaseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDbFormats(ByVal db As String) As <System.Xml.Serialization.XmlElementAttribute("getDbFormatsReturn")> String()
            Dim results() As Object = Me.Invoke("getDbFormats", New Object() {db})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetDbFormats(ByVal db As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDbFormats", New Object() {db}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetDbFormats(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDbFormatsAsync(ByVal db As String)
            Me.getDbFormatsAsync(db, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDbFormatsAsync(ByVal db As String, ByVal userState As Object)
            If (Me.getDbFormatsOperationCompleted Is Nothing) Then
                Me.getDbFormatsOperationCompleted = AddressOf Me.OngetDbFormatsOperationCompleted
            End If
            Me.InvokeAsync("getDbFormats", New Object() {db}, Me.getDbFormatsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDbFormatsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDbFormatsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDbFormatsCompleted(Me, New getDbFormatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFormatInfo(ByVal db As String, ByVal format As String) As <System.Xml.Serialization.XmlElementAttribute("getFormatInfoReturn")> FormatInfo
            Dim results() As Object = Me.Invoke("getFormatInfo", New Object() {db, format})
            Return CType(results(0),FormatInfo)
        End Function
        
        '''<remarks/>
        Public Function BegingetFormatInfo(ByVal db As String, ByVal format As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getFormatInfo", New Object() {db, format}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetFormatInfo(ByVal asyncResult As System.IAsyncResult) As FormatInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),FormatInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFormatInfoAsync(ByVal db As String, ByVal format As String)
            Me.getFormatInfoAsync(db, format, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFormatInfoAsync(ByVal db As String, ByVal format As String, ByVal userState As Object)
            If (Me.getFormatInfoOperationCompleted Is Nothing) Then
                Me.getFormatInfoOperationCompleted = AddressOf Me.OngetFormatInfoOperationCompleted
            End If
            Me.InvokeAsync("getFormatInfo", New Object() {db, format}, Me.getFormatInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFormatInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFormatInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFormatInfoCompleted(Me, New getFormatInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFormatStyles(ByVal db As String, ByVal format As String) As <System.Xml.Serialization.XmlElementAttribute("getFormatStylesReturn")> String()
            Dim results() As Object = Me.Invoke("getFormatStyles", New Object() {db, format})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetFormatStyles(ByVal db As String, ByVal format As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getFormatStyles", New Object() {db, format}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetFormatStyles(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFormatStylesAsync(ByVal db As String, ByVal format As String)
            Me.getFormatStylesAsync(db, format, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFormatStylesAsync(ByVal db As String, ByVal format As String, ByVal userState As Object)
            If (Me.getFormatStylesOperationCompleted Is Nothing) Then
                Me.getFormatStylesOperationCompleted = AddressOf Me.OngetFormatStylesOperationCompleted
            End If
            Me.InvokeAsync("getFormatStyles", New Object() {db, format}, Me.getFormatStylesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFormatStylesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFormatStylesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFormatStylesCompleted(Me, New getFormatStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getStyleInfo(ByVal db As String, ByVal format As String, ByVal style As String) As <System.Xml.Serialization.XmlElementAttribute("getStyleInfoReturn")> StyleInfo
            Dim results() As Object = Me.Invoke("getStyleInfo", New Object() {db, format, style})
            Return CType(results(0),StyleInfo)
        End Function
        
        '''<remarks/>
        Public Function BegingetStyleInfo(ByVal db As String, ByVal format As String, ByVal style As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getStyleInfo", New Object() {db, format, style}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetStyleInfo(ByVal asyncResult As System.IAsyncResult) As StyleInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),StyleInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getStyleInfoAsync(ByVal db As String, ByVal format As String, ByVal style As String)
            Me.getStyleInfoAsync(db, format, style, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getStyleInfoAsync(ByVal db As String, ByVal format As String, ByVal style As String, ByVal userState As Object)
            If (Me.getStyleInfoOperationCompleted Is Nothing) Then
                Me.getStyleInfoOperationCompleted = AddressOf Me.OngetStyleInfoOperationCompleted
            End If
            Me.InvokeAsync("getStyleInfo", New Object() {db, format, style}, Me.getStyleInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetStyleInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getStyleInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getStyleInfoCompleted(Me, New getStyleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fetchData(ByVal query As String, ByVal format As String, ByVal style As String) As <System.Xml.Serialization.XmlElementAttribute("fetchDataReturn")> String
            Dim results() As Object = Me.Invoke("fetchData", New Object() {query, format, style})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginfetchData(ByVal query As String, ByVal format As String, ByVal style As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("fetchData", New Object() {query, format, style}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndfetchData(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fetchDataAsync(ByVal query As String, ByVal format As String, ByVal style As String)
            Me.fetchDataAsync(query, format, style, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fetchDataAsync(ByVal query As String, ByVal format As String, ByVal style As String, ByVal userState As Object)
            If (Me.fetchDataOperationCompleted Is Nothing) Then
                Me.fetchDataOperationCompleted = AddressOf Me.OnfetchDataOperationCompleted
            End If
            Me.InvokeAsync("fetchData", New Object() {query, format, style}, Me.fetchDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnfetchDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.fetchDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fetchDataCompleted(Me, New fetchDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", ResponseNamespace:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fetchBatch(ByVal db As String, ByVal ids As String, ByVal format As String, ByVal style As String) As <System.Xml.Serialization.XmlElementAttribute("fetchBatchReturn")> String
            Dim results() As Object = Me.Invoke("fetchBatch", New Object() {db, ids, format, style})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginfetchBatch(ByVal db As String, ByVal ids As String, ByVal format As String, ByVal style As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("fetchBatch", New Object() {db, ids, format, style}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndfetchBatch(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fetchBatchAsync(ByVal db As String, ByVal ids As String, ByVal format As String, ByVal style As String)
            Me.fetchBatchAsync(db, ids, format, style, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fetchBatchAsync(ByVal db As String, ByVal ids As String, ByVal format As String, ByVal style As String, ByVal userState As Object)
            If (Me.fetchBatchOperationCompleted Is Nothing) Then
                Me.fetchBatchOperationCompleted = AddressOf Me.OnfetchBatchOperationCompleted
            End If
            Me.InvokeAsync("fetchBatch", New Object() {db, ids, format, style}, Me.fetchBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnfetchBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.fetchBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fetchBatchCompleted(Me, New fetchBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit")>  _
    Partial Public Class DatabaseInfo
        
        Private aliasListField() As String
        
        Private databaseTermsField() As String
        
        Private dataResourceInfoListField() As DataResourceInfo
        
        Private defaultFormatField As String
        
        Private descriptionField As String
        
        Private displayNameField As String
        
        Private exampleIdentifiersField As ExampleIdentifiersInfo
        
        Private formatInfoListField() As FormatInfo
        
        Private hrefField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("alias", IsNullable:=false)>  _
        Public Property aliasList() As String()
            Get
                Return Me.aliasListField
            End Get
            Set
                Me.aliasListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("databaseTerm", IsNullable:=false)>  _
        Public Property databaseTerms() As String()
            Get
                Return Me.databaseTermsField
            End Get
            Set
                Me.databaseTermsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("dataResourceInfo", IsNullable:=false)>  _
        Public Property dataResourceInfoList() As DataResourceInfo()
            Get
                Return Me.dataResourceInfoListField
            End Get
            Set
                Me.dataResourceInfoListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property defaultFormat() As String
            Get
                Return Me.defaultFormatField
            End Get
            Set
                Me.defaultFormatField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property displayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property exampleIdentifiers() As ExampleIdentifiersInfo
            Get
                Return Me.exampleIdentifiersField
            End Get
            Set
                Me.exampleIdentifiersField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("formatInfo", IsNullable:=false)>  _
        Public Property formatInfoList() As FormatInfo()
            Get
                Return Me.formatInfoListField
            End Get
            Set
                Me.formatInfoListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property href() As String
            Get
                Return Me.hrefField
            End Get
            Set
                Me.hrefField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit")>  _
    Partial Public Class DataResourceInfo
        
        Private hrefField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property href() As String
            Get
                Return Me.hrefField
            End Get
            Set
                Me.hrefField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit")>  _
    Partial Public Class StyleInfo
        
        Private mimeTypeField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property mimeType() As String
            Get
                Return Me.mimeTypeField
            End Get
            Set
                Me.mimeTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit")>  _
    Partial Public Class FormatInfo
        
        Private aliasesField() As String
        
        Private dataTermsField() As String
        
        Private nameField As String
        
        Private styleInfoListField() As StyleInfo
        
        Private syntaxTermsField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("alias", IsNullable:=false)>  _
        Public Property aliases() As String()
            Get
                Return Me.aliasesField
            End Get
            Set
                Me.aliasesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("dataTerm", IsNullable:=false)>  _
        Public Property dataTerms() As String()
            Get
                Return Me.dataTermsField
            End Get
            Set
                Me.dataTermsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("styleInfo", IsNullable:=false)>  _
        Public Property styleInfoList() As StyleInfo()
            Get
                Return Me.styleInfoListField
            End Get
            Set
                Me.styleInfoListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("syntaxTerm", IsNullable:=false)>  _
        Public Property syntaxTerms() As String()
            Get
                Return Me.syntaxTermsField
            End Get
            Set
                Me.syntaxTermsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ebi.ac.uk/ws/services/WSDbfetchDoclit")>  _
    Partial Public Class ExampleIdentifiersInfo
        
        Private accessionListField() As String
        
        Private entryVersionListField() As String
        
        Private idListField() As String
        
        Private nameListField() As String
        
        Private sequenceVersionListField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("accession", IsNullable:=false)>  _
        Public Property accessionList() As String()
            Get
                Return Me.accessionListField
            End Get
            Set
                Me.accessionListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("entryVersion", IsNullable:=false)>  _
        Public Property entryVersionList() As String()
            Get
                Return Me.entryVersionListField
            End Get
            Set
                Me.entryVersionListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("id", IsNullable:=false)>  _
        Public Property idList() As String()
            Get
                Return Me.idListField
            End Get
            Set
                Me.idListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("name", IsNullable:=false)>  _
        Public Property nameList() As String()
            Get
                Return Me.nameListField
            End Get
            Set
                Me.nameListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("sequenceVersion", IsNullable:=false)>  _
        Public Property sequenceVersionList() As String()
            Get
                Return Me.sequenceVersionListField
            End Get
            Set
                Me.sequenceVersionListField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getSupportedDBsCompletedEventHandler(ByVal sender As Object, ByVal e As getSupportedDBsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSupportedDBsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getSupportedFormatsCompletedEventHandler(ByVal sender As Object, ByVal e As getSupportedFormatsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSupportedFormatsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getSupportedStylesCompletedEventHandler(ByVal sender As Object, ByVal e As getSupportedStylesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSupportedStylesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getDatabaseInfoListCompletedEventHandler(ByVal sender As Object, ByVal e As getDatabaseInfoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDatabaseInfoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DatabaseInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DatabaseInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getDatabaseInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getDatabaseInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDatabaseInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DatabaseInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DatabaseInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getDbFormatsCompletedEventHandler(ByVal sender As Object, ByVal e As getDbFormatsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDbFormatsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getFormatInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getFormatInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFormatInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FormatInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FormatInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getFormatStylesCompletedEventHandler(ByVal sender As Object, ByVal e As getFormatStylesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFormatStylesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getStyleInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getStyleInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getStyleInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As StyleInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),StyleInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub fetchDataCompletedEventHandler(ByVal sender As Object, ByVal e As fetchDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fetchDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub fetchBatchCompletedEventHandler(ByVal sender As Object, ByVal e As fetchBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fetchBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
